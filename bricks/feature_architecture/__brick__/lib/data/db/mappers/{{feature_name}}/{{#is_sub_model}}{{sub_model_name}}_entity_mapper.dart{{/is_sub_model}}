import 'package:for_mason_example/data/db/entities/{{feature_name}}/{{sub_model_name}}_entity.dart';
import 'package:for_mason_example/domain/models/{{feature_name}}/{{sub_model_name}}.dart';
import 'package:smartstruct/smartstruct.dart';
{{#sub_model_list_names}}import 'package:for_mason_example/data/db/entities/{{feature_name}}/{{model_name}}_entity.dart';
import 'package:for_mason_example/domain/models/{{feature_name}}/{{model_name}}.dart';
import 'package:for_mason_example/data/db/mappers/{{feature_name}}/{{model_name}}_entity_mapper.dart';
{{/sub_model_list_names}}
part '../../../../generated/data/db/mappers/{{feature_name}}/{{sub_model_name}}_entity_mapper.mapper.g.dart';

@Mapper()
abstract class {{sub_model_name.pascalCase()}}EntityMapper {
  {{#sub_model_list_names}}@Mapping(source: mapFrom{{model_name.pascalCase()}}, target: "{{model_name.camelCase()}}{{#isList}}List{{/isList}}")
  {{/sub_model_list_names}}
  {{sub_model_name.pascalCase()}}Entity fromModel({{sub_model_name.pascalCase()}} model);
  
  {{#sub_model_list_names}}@Mapping(source: mapTo{{model_name.pascalCase()}}, target: "{{model_name.camelCase()}}{{#isList}}List{{/isList}}")
  {{/sub_model_list_names}}
  {{sub_model_name.pascalCase()}} toModel({{sub_model_name.pascalCase()}}Entity model);
}
{{#sub_model_list_names}}
  {{#isList}}
  List<{{model_name.pascalCase()}}Entity>? mapFrom{{model_name.pascalCase()}}({{sub_model_name.pascalCase()}} source) =>
    source.{{model_name.camelCase()}}List == null
        ? null
        : source.{{model_name.camelCase()}}List!
            .map((e) => {{model_name.pascalCase()}}EntityMapperImpl().fromModel(e))
            .toList();

  List<{{model_name.pascalCase()}}>? mapTo{{model_name.pascalCase()}}({{sub_model_name.pascalCase()}}Entity source) =>
    source.{{model_name.camelCase()}}List == null
        ? null
        : source.{{model_name.camelCase()}}List!
            .map((e) => {{model_name.pascalCase()}}EntityMapperImpl().toModel(e))
            .toList();
  {{/isList }}
  {{^isList}}
  {{model_name.pascalCase()}}Entity? mapFrom{{model_name.pascalCase()}}({{sub_model_name.pascalCase()}} source) =>
    source.{{model_name.camelCase()}} == null
        ? null
        : {{model_name.pascalCase()}}EntityMapperImpl().fromModel(source.{{model_name.camelCase()}}!);

  {{model_name.pascalCase()}}? mapTo{{model_name.pascalCase()}}({{sub_model_name.pascalCase()}}Entity source) =>
    source.{{model_name.camelCase()}} == null
        ? null
        : {{model_name.pascalCase()}}EntityMapperImpl().toModel(source.{{model_name.camelCase()}}!);
  {{/isList}}
{{/sub_model_list_names}}